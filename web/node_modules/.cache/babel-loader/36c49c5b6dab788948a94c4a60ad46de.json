{"ast":null,"code":"var _jsxFileName = \"/Users/iszkrit/UTTC/hackathon/web/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Thread = props => {\n  _s();\n\n  const [messages, setMessages] = useState([\"トークを始めよう！\"]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messageEdited, setMessageEdited] = useState(\"\");\n  const [indexEdited, setIndexEdited] = useState(-1);\n  const isEdited = indexEdited !== -1;\n  useEffect(() => {\n    axios.get('http://localhost:8080/account').then(res => {\n      setMessages(res.data);\n    });\n  }, []);\n\n  const submitHandle = e => {\n    if (newMessage !== \"\") {\n      const data = {\n        message: newMessage,\n        sender: props.user.accountId\n      };\n      axios.post('http://localhost:8080/message', data).then(response => {\n        console.log('response body:', response.data);\n      });\n      setNewMessage(\"\");\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n    }\n\n    ;\n  };\n\n  const sendMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandle,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"messageEnter\",\n          value: newMessage,\n          placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u8A18\\u5165\",\n          onChange: event => {\n            setNewMessage(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"messagePost\",\n          type: \"submit\",\n          value: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n\n  const editHandle = index => {\n    setIndexEdited(index);\n    setMessageEdited(messages[index]);\n  };\n\n  const editMessage = () => {\n    const changeHandle = e => {\n      messages[indexEdited] = messageEdited;\n      setMessages(messages);\n      setMessageEdited(\"\");\n      setIndexEdited(-1);\n      e.preventDefault();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: changeHandle,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"messageEnter\",\n          value: messageEdited,\n          onChange: event => {\n            setMessageEdited(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"messagePost\",\n          type: \"submit\",\n          value: \"\\u7DE8\\u96C6\\u5B8C\\u4E86\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  };\n\n  const deleteHandle = index => {\n    const newMessages = [...messages].filter((message, messageIndex) => messageIndex !== index);\n    setMessages(newMessages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [`${props.user}：${message}`, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"messageDelete\",\n          onClick: () => deleteHandle(index),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"messageEdit\",\n          onClick: () => editHandle(index),\n          children: \"\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), isEdited ? editMessage() : sendMessage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thread, \"e876uiMVdPpVsbsuNNvMlYbKpDU=\");\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useState","axios","Thread","props","messages","setMessages","newMessage","setNewMessage","messageEdited","setMessageEdited","indexEdited","setIndexEdited","isEdited","useEffect","get","then","res","data","submitHandle","e","message","sender","user","accountId","post","response","console","log","preventDefault","sendMessage","event","target","value","editHandle","index","editMessage","changeHandle","deleteHandle","newMessages","filter","messageIndex","map"],"sources":["/Users/iszkrit/UTTC/hackathon/web/src/components/Thread.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ntype User = {\n  accountName:  string\n  accountId:    string \n}\n\ntype Props = {\n  user: User\n}\n\nconst Thread = (props: Props) => {\n\n  const [messages, setMessages] = useState([\"トークを始めよう！\"]) \n  const [newMessage, setNewMessage] = useState(\"\")\n  const [messageEdited, setMessageEdited] = useState(\"\")\n  const [indexEdited, setIndexEdited] = useState(-1)\n  const isEdited = indexEdited !== -1\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/account')\n    .then(res => {\n        setMessages(res.data)\n    })\n  }, [])\n\n  const submitHandle = (e: React.FormEvent<HTMLFormElement>) => {\n    if (newMessage !== \"\") {\n      const data = {\n        message:  newMessage,\n        sender:   props.user.accountId      \n      };\n      axios.post('http://localhost:8080/message', data)\n      .then(response => {\n      console.log('response body:', response.data);\n      });\n      setNewMessage(\"\")\n      e.preventDefault()\n    }else{\n      e.preventDefault()\n    };\n  }\n\n  const sendMessage = () => {\n    return (\n      <div className=\"submit\">\n        <form onSubmit={submitHandle}>\n          <textarea \n            className=\"messageEnter\"\n            value={newMessage}\n            placeholder=\"メッセージを記入\"\n            onChange={(event)=>{setNewMessage(event.target.value)}}\n          />\n          <input\n            className=\"messagePost\"\n            type=\"submit\"\n            value=\"送信\"\n          /> \n        </form>\n      </div>\n    )\n  }\n\n  const editHandle = (index :number) => {\n    setIndexEdited(index) \n    setMessageEdited(messages[index])\n  }\n\n  const editMessage = () => {\n    const changeHandle = (e :React.FormEvent<HTMLFormElement>) => {\n      messages[indexEdited] = messageEdited\n      setMessages(messages) \n      setMessageEdited(\"\")\n      setIndexEdited(-1)\n      e.preventDefault()\n\n    }\n    return (\n      <div className=\"submit\">\n        <form onSubmit={changeHandle}>\n          <textarea \n            className=\"messageEnter\"\n            value={messageEdited}\n            onChange={(event)=>{setMessageEdited(event.target.value)}}\n          />\n          <input\n            className=\"messagePost\"\n            type=\"submit\"\n            value=\"編集完了\"\n          /> \n        </form>\n      </div>\n    )\n  }\n\n  const deleteHandle = (index :number) => {\n    const newMessages = [...messages].filter((message, messageIndex)=>(messageIndex !== index))\n    setMessages(newMessages)\n  };\n\n  return(\n    <div>\n      <div className=\"thread\">\n        {messages.map((message:string, index:number)=>(\n          <li key={index}>\n            {`${props.user}：${message}`}\n            <span className=\"messageDelete\" onClick={()=>deleteHandle(index)}>×</span>\n            <span className=\"messageEdit\" onClick={()=>editHandle(index)}>編集</span>\n          </li>\n        ))}\n          <br />\n      </div>\n      { isEdited ? editMessage() : sendMessage() }\n    </div>\n  );\n};\n  \nexport default Thread\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}