{"ast":null,"code":"var _jsxFileName = \"/Users/iszkrit/UTTC/hackathon/web/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { AvatarIcon } from './index';\nimport axios from 'axios';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport DoneIcon from '@mui/icons-material/Done';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Thread = props => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [newMessageContent, setNewMessageContent] = useState(\"\");\n  const [editedMessage, setMessageEdited] = useState(\"\");\n  const [editedMessageId, setMessageIdEdited] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const [likes, setLikes] = useState([]);\n\n  const messageRefresh = () => {\n    axios.get('http://localhost:8080/message', {\n      params: {\n        channelId: props.nowChannel\n      }\n    }).then(res => {\n      setMessages(res.data);\n    });\n  };\n\n  const fetchAccount = () => {\n    axios.get('http://localhost:8080/account').then(res => {\n      setAccounts(res.data);\n    });\n  };\n\n  const likeRefresh = () => {\n    axios.get('http://localhost:8080/like', {\n      params: {\n        accountId: props.user.id\n      }\n    }).then(res => {\n      setLikes(res.data);\n    });\n  };\n\n  useEffect(() => {\n    messageRefresh();\n    fetchAccount();\n  }, [props.nowChannel]);\n  useEffect(() => {\n    fetchAccount();\n  }, [props.user]); // --------------------------------------------メッセージ送信系--------------------------------------------\n\n  const submitHandle = e => {\n    if (newMessageContent !== \"\") {\n      const data = {\n        content: newMessageContent,\n        sender: props.user.id,\n        channel: props.nowChannel\n      };\n      axios.post('http://localhost:8080/message', data).then(response => {\n        console.log('response body:', response.data);\n        messageRefresh();\n      });\n      setNewMessageContent(\"\");\n      scrollToBottomOfList();\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n    }\n\n    ;\n  };\n\n  const sendMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: 80,\n            textAlign: 'center'\n          },\n          elevation: 10,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandle,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                mt: 1.6,\n                width: 650\n              },\n              label: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\",\n              value: newMessageContent,\n              onChange: event => {\n                setNewMessageContent(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mt: 2.6,\n                ml: 1\n              },\n              type: \"submit\",\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 93\n              }, this),\n              children: \"\\u9001\\u4FE1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }, this);\n  }; // --------------------------------------------メッセージ編集系--------------------------------------------\n\n\n  const editHandle = (message, messageId) => {\n    setMessageEdited(message);\n    setMessageIdEdited(messageId);\n  };\n\n  const editMessage = () => {\n    const changeHandle = e => {\n      const data = {\n        content: editedMessage,\n        id: editedMessageId\n      };\n      axios.put('http://localhost:8080/message', data).then(response => {\n        console.log('response body:', response.data);\n        setMessageIdEdited(\"\");\n        messageRefresh();\n      });\n      e.preventDefault();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: 80,\n            textAlign: 'center'\n          },\n          elevation: 10,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: changeHandle,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                mt: 1.6,\n                width: 650\n              },\n              label: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u7DE8\\u96C6\",\n              value: editedMessage,\n              onChange: event => {\n                setMessageEdited(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mt: 2.6,\n                ml: 1\n              },\n              type: \"submit\",\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 93\n              }, this),\n              children: \"\\u4FEE\\u6B63\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 10\n    }, this);\n  };\n\n  const editMenu = message => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageMenu\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Chip, {\n          label: \"\\u7DE8\\u96C6\",\n          onClick: () => editHandle(message.content, message.id),\n          onDelete: () => editHandle(message.content, message.id),\n          deleteIcon: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 31\n          }, this),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"\\u524A\\u9664\",\n          onClick: () => deleteHandle(message.id),\n          onDelete: () => deleteHandle(message.id),\n          deleteIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 31\n          }, this),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 10\n    }, this);\n  };\n\n  const deleteHandle = messageId => {\n    const deleteId = {\n      id: messageId\n    };\n    axios.delete('http://localhost:8080/message', {\n      data: deleteId\n    }).then(response => {\n      console.log('response body:', response.data);\n      messageRefresh();\n    });\n  }; // --------------------------------------------スレッドで扱うメソッド--------------------------------------------\n\n\n  const returnSenderInfo = senderId => {\n    const senderInfo = accounts.find(function (account) {\n      return account.id === senderId;\n    });\n    return senderInfo ? {\n      senderName: senderInfo.name,\n      senderColor: senderInfo.color\n    } : {\n      senderName: \"unknown\",\n      senderColor: \"\"\n    };\n  }; // const returnLike = (messageId: string) :boolean => {\n  //    return likeInfo = likes.find(function(like) {return like.messageId === messageId});\n  // }\n\n\n  const ref = /*#__PURE__*/React.createRef();\n  const scrollToBottomOfList = useCallback(() => {\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  }, [ref]);\n\n  const messageOrStamp = content => {\n    return content === \"niceStamp\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../assets/images/niceStamp.jpg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 60\n    }, this);\n  }; // --------------------------------------------スレッド本体-------------------------------------------- \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"channel\",\n      children: \"\\u30B9\\u30EC\\u30C3\\u30C9\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread\",\n      children: [messages === null || messages === void 0 ? void 0 : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageInfo\",\n            children: [/*#__PURE__*/_jsxDEV(AvatarIcon, {\n              accountName: returnSenderInfo(message.sender).senderName,\n              accountColor: returnSenderInfo(message.sender).senderColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"senderName\",\n              children: returnSenderInfo(message.sender).senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"sendDate\",\n              children: message.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 25\n            }, this), message.edited ? /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"alreadyEdited\",\n              children: \"(\\u7DE8\\u96C6\\u6E08\\u307F)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 43\n            }, this) : null, props.isEditing && props.user.id === message.sender ? editMenu(message) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageContents\",\n            children: messageOrStampmessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 16\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      children: props.isEditing ? editMessage() : sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Thread, \"MzVEeJXIjPlLkBHY/HsVmbF1aHU=\");\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AvatarIcon","axios","Chip","Stack","Box","Button","TextField","Paper","DoneIcon","DeleteIcon","SendIcon","Thread","props","messages","setMessages","newMessageContent","setNewMessageContent","editedMessage","setMessageEdited","editedMessageId","setMessageIdEdited","accounts","setAccounts","likes","setLikes","messageRefresh","get","params","channelId","nowChannel","then","res","data","fetchAccount","likeRefresh","accountId","user","id","submitHandle","e","content","sender","channel","post","response","console","log","scrollToBottomOfList","preventDefault","sendMessage","display","position","bottom","left","right","height","textAlign","mt","width","event","target","value","ml","editHandle","message","messageId","editMessage","changeHandle","put","editMenu","deleteHandle","deleteId","delete","returnSenderInfo","senderId","senderInfo","find","account","senderName","name","senderColor","color","ref","createRef","current","scrollIntoView","behavior","block","messageOrStamp","map","index","date","edited","isEditing","messageOrStampmessage"],"sources":["/Users/iszkrit/UTTC/hackathon/web/src/components/Thread.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { AvatarIcon } from './index';\n\nimport axios from 'axios';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport DoneIcon from '@mui/icons-material/Done';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\n\n\ntype User = {\n   name:    string\n   id:      string \n   color:   string\n};\n\ntype Props = {\n   user:         User\n   nowChannel:   string\n   isEditing:    boolean\n};\n\ntype Message = {\n   content:   string\n   id:        string\n   sender:    string\n   date:      string\n   edited:    boolean\n};\n\ntype Like = {\n   likeId:    string\n   messageId: string\n   accountId: string\n}\n\nconst Thread = (props: Props) => {\n\n   const [messages, setMessages] = useState<Message[]>([]);\n   const [newMessageContent, setNewMessageContent] = useState(\"\");\n   const [editedMessage, setMessageEdited] = useState(\"\");\n   const [editedMessageId, setMessageIdEdited] = useState(\"\");\n   const [accounts, setAccounts] = useState<User[]>([]);\n   const [likes, setLikes] = useState<Like[]>([]);\n\n   const messageRefresh = () => {\n      axios.get('http://localhost:8080/message', {\n         params: {\n            channelId: props.nowChannel\n         }\n      })\n      .then(res => {\n         setMessages(res.data)\n      })\n   };\n\n   const fetchAccount = () => {\n      axios.get('http://localhost:8080/account')\n      .then(res => {\n         setAccounts(res.data)\n      })\n   };\n\n   const likeRefresh = () => {\n      axios.get('http://localhost:8080/like', {\n         params: {\n            accountId: props.user.id\n         }\n      })\n      .then(res => {\n         setLikes(res.data)\n      })\n   };\n\n   useEffect(() => {\n      messageRefresh() \n      fetchAccount()\n   }, [props.nowChannel]);\n\n   useEffect(() => {\n      fetchAccount()\n   }, [props.user]);\n\n   // --------------------------------------------メッセージ送信系--------------------------------------------\n   const submitHandle = (e: React.FormEvent<HTMLFormElement>) => {\n      if (newMessageContent !== \"\") {\n         const data = {\n            content:  newMessageContent,\n            sender:   props.user.id,\n            channel:  props.nowChannel\n         };\n         axios.post('http://localhost:8080/message', data)\n         .then(response => {\n            console.log('response body:', response.data);\n            messageRefresh()\n         });\n         setNewMessageContent(\"\")\n         scrollToBottomOfList()\n         e.preventDefault()       \n         } else {\n         e.preventDefault()\n      };\n   };\n\n   const sendMessage = () => {\n      return (\n         <div className=\"submit\">   \n            <Box sx={{display: 'flex'}}>\n               <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, height: 80, textAlign: 'center'}} elevation={10}>\n                  <form onSubmit={submitHandle}>\n                     <TextField sx={{ mt:1.6, width:650 }} label=\"メッセージを入力\" value={newMessageContent} onChange={(event)=>{setNewMessageContent(event.target.value)}} />\n                     <Button sx={{mt:2.6, ml:1}} type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>\n                        送信\n                     </Button>\n                  </form>\n               </Paper>\n            </Box>\n         </div>\n      );\n   };\n\n\n\n  // --------------------------------------------メッセージ編集系--------------------------------------------\n   const editHandle = (message: string, messageId: string) => {\n      setMessageEdited(message)\n      setMessageIdEdited(messageId)\n   };\n\n   const editMessage = () => {\n    \n      const changeHandle = (e :React.FormEvent<HTMLFormElement>) => {\n         const data = {\n            content:   editedMessage,\n            id:        editedMessageId,\n         };\n         axios.put('http://localhost:8080/message', data)\n         .then(response => {\n            console.log('response body:', response.data);\n            setMessageIdEdited(\"\")\n            messageRefresh() \n         });\n         e.preventDefault()\n      };\n    \n      return (\n         <div className=\"submit\">   \n            <Box sx={{display: 'flex'}}>\n               <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, height: 80, textAlign: 'center'}} elevation={10}>\n                  <form onSubmit={changeHandle}>\n                     <TextField sx={{ mt:1.6, width:650 }} label=\"メッセージを編集\" value={editedMessage} onChange={(event)=>{setMessageEdited(event.target.value)}} />\n                     <Button sx={{mt:2.6, ml:1}} type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>\n                        修正\n                     </Button>\n                  </form>\n               </Paper>\n            </Box>\n         </div>\n      );\n   };\n\n   const editMenu = (message: Message) => {\n      return (\n         <div className=\"messageMenu\">\n            <Stack direction=\"row\" spacing={1}>\n               <Chip\n                  label=\"編集\"\n                  onClick={()=>editHandle(message.content, message.id)}\n                  onDelete={()=>editHandle(message.content, message.id)}\n                  deleteIcon={<DoneIcon />}\n                  size=\"small\"\n               />\n               <Chip\n                  label=\"削除\"\n                  onClick={()=>deleteHandle(message.id)}\n                  onDelete={()=>deleteHandle(message.id)}\n                  deleteIcon={<DeleteIcon />}\n                  size=\"small\"\n               />\n            </Stack>\n         </div>\n      );\n   };\n\n   const deleteHandle = (messageId: string) => {\n      const deleteId = {\n         id: messageId   \n      };\n      axios.delete('http://localhost:8080/message', {data: deleteId})\n      .then(response => {\n         console.log('response body:', response.data);\n         messageRefresh();\n      });\n    };\n\n   // --------------------------------------------スレッドで扱うメソッド--------------------------------------------\n   type SenderInfo = {\n      senderName:    string\n      senderColor:   string\n   };\n\n   const returnSenderInfo = (senderId: string) :SenderInfo => {\n      const senderInfo = accounts.find(function(account) {return account.id === senderId});\n      return senderInfo ? {senderName: senderInfo.name, senderColor: senderInfo.color} : {senderName: \"unknown\", senderColor : \"\"};\n   };\n\n   // const returnLike = (messageId: string) :boolean => {\n   //    return likeInfo = likes.find(function(like) {return like.messageId === messageId});\n   // }\n\n   const ref = React.createRef<HTMLDivElement>()\n   const scrollToBottomOfList = useCallback(() => {\n      ref!.current!.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n      })\n    }, [ ref ])\n\n    const messageOrStamp =(content: string) => {\n       return content === \"niceStamp\" ? <a>{content}</a> : <img src=\"../assets/images/niceStamp.jpg\" />\n    }\n\n  // --------------------------------------------スレッド本体-------------------------------------------- \n   return(\n      <div>\n         <h2 className=\"channel\">スレッド一覧</h2>\n         <div className=\"thread\">\n            {messages?.map((message: Message, index: number) => (\n               <li key={index}>\n                  <div>\n                     <div className=\"messageInfo\">\n                        <AvatarIcon accountName={returnSenderInfo(message.sender).senderName} accountColor={returnSenderInfo(message.sender).senderColor}/>\n                        <a className=\"senderName\">{returnSenderInfo(message.sender).senderName}</a>\n                        <a className=\"sendDate\">{message.date}</a>\n                        {/* <LikeButton IsLiked={message.id) /> */}\n                        {message.edited ? <a className=\"alreadyEdited\">(編集済み)</a> : null}\n                        {(props.isEditing && props.user.id === message.sender) ? editMenu(message) : null}\n                     </div>\n                     <div className=\"messageContents\">\n                        {messageOrStampmessage.content}\n                     </div>\n                  </div>\n               </li>\n             ))}\n             <br />\n         </div>\n         <div ref={ref}>\n            { props.isEditing ? editMessage() : sendMessage()}\n         </div>\n      </div>\n   );\n};\n  \nexport default Thread;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AA6BA,MAAMC,MAAM,GAAIC,KAAD,IAAkB;EAAA;;EAE9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAY,EAAZ,CAAxC;EACA,MAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,EAAD,CAA1D;EACA,MAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACsB,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAS,EAAT,CAAxC;EACA,MAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAS,EAAT,CAAlC;;EAEA,MAAM4B,cAAc,GAAG,MAAM;IAC1BxB,KAAK,CAACyB,GAAN,CAAU,+BAAV,EAA2C;MACxCC,MAAM,EAAE;QACLC,SAAS,EAAEhB,KAAK,CAACiB;MADZ;IADgC,CAA3C,EAKCC,IALD,CAKMC,GAAG,IAAI;MACVjB,WAAW,CAACiB,GAAG,CAACC,IAAL,CAAX;IACF,CAPD;EAQF,CATD;;EAWA,MAAMC,YAAY,GAAG,MAAM;IACxBhC,KAAK,CAACyB,GAAN,CAAU,+BAAV,EACCI,IADD,CACMC,GAAG,IAAI;MACVT,WAAW,CAACS,GAAG,CAACC,IAAL,CAAX;IACF,CAHD;EAIF,CALD;;EAOA,MAAME,WAAW,GAAG,MAAM;IACvBjC,KAAK,CAACyB,GAAN,CAAU,4BAAV,EAAwC;MACrCC,MAAM,EAAE;QACLQ,SAAS,EAAEvB,KAAK,CAACwB,IAAN,CAAWC;MADjB;IAD6B,CAAxC,EAKCP,IALD,CAKMC,GAAG,IAAI;MACVP,QAAQ,CAACO,GAAG,CAACC,IAAL,CAAR;IACF,CAPD;EAQF,CATD;;EAWAlC,SAAS,CAAC,MAAM;IACb2B,cAAc;IACdQ,YAAY;EACd,CAHQ,EAGN,CAACrB,KAAK,CAACiB,UAAP,CAHM,CAAT;EAKA/B,SAAS,CAAC,MAAM;IACbmC,YAAY;EACd,CAFQ,EAEN,CAACrB,KAAK,CAACwB,IAAP,CAFM,CAAT,CA3C8B,CA+C9B;;EACA,MAAME,YAAY,GAAIC,CAAD,IAAyC;IAC3D,IAAIxB,iBAAiB,KAAK,EAA1B,EAA8B;MAC3B,MAAMiB,IAAI,GAAG;QACVQ,OAAO,EAAGzB,iBADA;QAEV0B,MAAM,EAAI7B,KAAK,CAACwB,IAAN,CAAWC,EAFX;QAGVK,OAAO,EAAG9B,KAAK,CAACiB;MAHN,CAAb;MAKA5B,KAAK,CAAC0C,IAAN,CAAW,+BAAX,EAA4CX,IAA5C,EACCF,IADD,CACMc,QAAQ,IAAI;QACfC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACZ,IAAvC;QACAP,cAAc;MAChB,CAJD;MAKAT,oBAAoB,CAAC,EAAD,CAApB;MACA+B,oBAAoB;MACpBR,CAAC,CAACS,cAAF;IACC,CAdJ,MAcU;MACPT,CAAC,CAACS,cAAF;IACF;;IAAA;EACH,CAlBD;;EAoBA,MAAMC,WAAW,GAAG,MAAM;IACvB,oBACG;MAAK,SAAS,EAAC,QAAf;MAAA,uBACG,QAAC,GAAD;QAAK,EAAE,EAAE;UAACC,OAAO,EAAE;QAAV,CAAT;QAAA,uBACG,QAAC,KAAD;UAAO,EAAE,EAAE;YAAEC,QAAQ,EAAE,OAAZ;YAAqBC,MAAM,EAAE,CAA7B;YAAgCC,IAAI,EAAE,CAAtC;YAAyCC,KAAK,EAAE,CAAhD;YAAmDC,MAAM,EAAE,EAA3D;YAA+DC,SAAS,EAAE;UAA1E,CAAX;UAAgG,SAAS,EAAE,EAA3G;UAAA,uBACG;YAAM,QAAQ,EAAElB,YAAhB;YAAA,wBACG,QAAC,SAAD;cAAW,EAAE,EAAE;gBAAEmB,EAAE,EAAC,GAAL;gBAAUC,KAAK,EAAC;cAAhB,CAAf;cAAsC,KAAK,EAAC,kDAA5C;cAAuD,KAAK,EAAE3C,iBAA9D;cAAiF,QAAQ,EAAG4C,KAAD,IAAS;gBAAC3C,oBAAoB,CAAC2C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;cAAyC;YAA9I;cAAA;cAAA;cAAA;YAAA,QADH,eAEG,QAAC,MAAD;cAAQ,EAAE,EAAE;gBAACJ,EAAE,EAAC,GAAJ;gBAASK,EAAE,EAAC;cAAZ,CAAZ;cAA4B,IAAI,EAAC,QAAjC;cAA0C,OAAO,EAAC,WAAlD;cAA8D,OAAO,eAAE,QAAC,QAAD;gBAAA;gBAAA;gBAAA;cAAA,QAAvE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFH;UAAA;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA;MADH;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QADH;EAcF,CAfD,CApE8B,CAuF/B;;;EACC,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAkBC,SAAlB,KAAwC;IACxD/C,gBAAgB,CAAC8C,OAAD,CAAhB;IACA5C,kBAAkB,CAAC6C,SAAD,CAAlB;EACF,CAHD;;EAKA,MAAMC,WAAW,GAAG,MAAM;IAEvB,MAAMC,YAAY,GAAI5B,CAAD,IAAyC;MAC3D,MAAMP,IAAI,GAAG;QACVQ,OAAO,EAAIvB,aADD;QAEVoB,EAAE,EAASlB;MAFD,CAAb;MAIAlB,KAAK,CAACmE,GAAN,CAAU,+BAAV,EAA2CpC,IAA3C,EACCF,IADD,CACMc,QAAQ,IAAI;QACfC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACZ,IAAvC;QACAZ,kBAAkB,CAAC,EAAD,CAAlB;QACAK,cAAc;MAChB,CALD;MAMAc,CAAC,CAACS,cAAF;IACF,CAZD;;IAcA,oBACG;MAAK,SAAS,EAAC,QAAf;MAAA,uBACG,QAAC,GAAD;QAAK,EAAE,EAAE;UAACE,OAAO,EAAE;QAAV,CAAT;QAAA,uBACG,QAAC,KAAD;UAAO,EAAE,EAAE;YAAEC,QAAQ,EAAE,OAAZ;YAAqBC,MAAM,EAAE,CAA7B;YAAgCC,IAAI,EAAE,CAAtC;YAAyCC,KAAK,EAAE,CAAhD;YAAmDC,MAAM,EAAE,EAA3D;YAA+DC,SAAS,EAAE;UAA1E,CAAX;UAAgG,SAAS,EAAE,EAA3G;UAAA,uBACG;YAAM,QAAQ,EAAEW,YAAhB;YAAA,wBACG,QAAC,SAAD;cAAW,EAAE,EAAE;gBAAEV,EAAE,EAAC,GAAL;gBAAUC,KAAK,EAAC;cAAhB,CAAf;cAAsC,KAAK,EAAC,kDAA5C;cAAuD,KAAK,EAAEzC,aAA9D;cAA6E,QAAQ,EAAG0C,KAAD,IAAS;gBAACzC,gBAAgB,CAACyC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;cAAqC;YAAtI;cAAA;cAAA;cAAA;YAAA,QADH,eAEG,QAAC,MAAD;cAAQ,EAAE,EAAE;gBAACJ,EAAE,EAAC,GAAJ;gBAASK,EAAE,EAAC;cAAZ,CAAZ;cAA4B,IAAI,EAAC,QAAjC;cAA0C,OAAO,EAAC,WAAlD;cAA8D,OAAO,eAAE,QAAC,QAAD;gBAAA;gBAAA;gBAAA;cAAA,QAAvE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFH;UAAA;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA;MADH;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QADH;EAcF,CA9BD;;EAgCA,MAAMO,QAAQ,GAAIL,OAAD,IAAsB;IACpC,oBACG;MAAK,SAAS,EAAC,aAAf;MAAA,uBACG,QAAC,KAAD;QAAO,SAAS,EAAC,KAAjB;QAAuB,OAAO,EAAE,CAAhC;QAAA,wBACG,QAAC,IAAD;UACG,KAAK,EAAC,cADT;UAEG,OAAO,EAAE,MAAID,UAAU,CAACC,OAAO,CAACxB,OAAT,EAAkBwB,OAAO,CAAC3B,EAA1B,CAF1B;UAGG,QAAQ,EAAE,MAAI0B,UAAU,CAACC,OAAO,CAACxB,OAAT,EAAkBwB,OAAO,CAAC3B,EAA1B,CAH3B;UAIG,UAAU,eAAE,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA,QAJf;UAKG,IAAI,EAAC;QALR;UAAA;UAAA;UAAA;QAAA,QADH,eAQG,QAAC,IAAD;UACG,KAAK,EAAC,cADT;UAEG,OAAO,EAAE,MAAIiC,YAAY,CAACN,OAAO,CAAC3B,EAAT,CAF5B;UAGG,QAAQ,EAAE,MAAIiC,YAAY,CAACN,OAAO,CAAC3B,EAAT,CAH7B;UAIG,UAAU,eAAE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA,QAJf;UAKG,IAAI,EAAC;QALR;UAAA;UAAA;UAAA;QAAA,QARH;MAAA;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QADH;EAoBF,CArBD;;EAuBA,MAAMiC,YAAY,GAAIL,SAAD,IAAuB;IACzC,MAAMM,QAAQ,GAAG;MACdlC,EAAE,EAAE4B;IADU,CAAjB;IAGAhE,KAAK,CAACuE,MAAN,CAAa,+BAAb,EAA8C;MAACxC,IAAI,EAAEuC;IAAP,CAA9C,EACCzC,IADD,CACMc,QAAQ,IAAI;MACfC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACZ,IAAvC;MACAP,cAAc;IAChB,CAJD;EAKD,CATF,CApJ8B,CA+J9B;;;EAMA,MAAMgD,gBAAgB,GAAIC,QAAD,IAAkC;IACxD,MAAMC,UAAU,GAAGtD,QAAQ,CAACuD,IAAT,CAAc,UAASC,OAAT,EAAkB;MAAC,OAAOA,OAAO,CAACxC,EAAR,KAAeqC,QAAtB;IAA+B,CAAhE,CAAnB;IACA,OAAOC,UAAU,GAAG;MAACG,UAAU,EAAEH,UAAU,CAACI,IAAxB;MAA8BC,WAAW,EAAEL,UAAU,CAACM;IAAtD,CAAH,GAAkE;MAACH,UAAU,EAAE,SAAb;MAAwBE,WAAW,EAAG;IAAtC,CAAnF;EACF,CAHD,CArK8B,CA0K9B;EACA;EACA;;;EAEA,MAAME,GAAG,gBAAGtF,KAAK,CAACuF,SAAN,EAAZ;EACA,MAAMpC,oBAAoB,GAAGhD,WAAW,CAAC,MAAM;IAC5CmF,GAAG,CAAEE,OAAL,CAAcC,cAAd,CAA6B;MAC3BC,QAAQ,EAAE,QADiB;MAE3BC,KAAK,EAAE;IAFoB,CAA7B;EAID,CALsC,EAKpC,CAAEL,GAAF,CALoC,CAAxC;;EAOC,MAAMM,cAAc,GAAGhD,OAAD,IAAqB;IACxC,OAAOA,OAAO,KAAK,WAAZ,gBAA0B;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAA1B,gBAA6C;MAAK,GAAG,EAAC;IAAT;MAAA;MAAA;MAAA;IAAA,QAApD;EACF,CAFD,CAtL6B,CA0L/B;;;EACC,oBACG;IAAA,wBACG;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAK,SAAS,EAAC,QAAf;MAAA,WACI3B,QADJ,aACIA,QADJ,uBACIA,QAAQ,CAAE4E,GAAV,CAAc,CAACzB,OAAD,EAAmB0B,KAAnB,kBACZ;QAAA,uBACG;UAAA,wBACG;YAAK,SAAS,EAAC,aAAf;YAAA,wBACG,QAAC,UAAD;cAAY,WAAW,EAAEjB,gBAAgB,CAACT,OAAO,CAACvB,MAAT,CAAhB,CAAiCqC,UAA1D;cAAsE,YAAY,EAAEL,gBAAgB,CAACT,OAAO,CAACvB,MAAT,CAAhB,CAAiCuC;YAArH;cAAA;cAAA;cAAA;YAAA,QADH,eAEG;cAAG,SAAS,EAAC,YAAb;cAAA,UAA2BP,gBAAgB,CAACT,OAAO,CAACvB,MAAT,CAAhB,CAAiCqC;YAA5D;cAAA;cAAA;cAAA;YAAA,QAFH,eAGG;cAAG,SAAS,EAAC,UAAb;cAAA,UAAyBd,OAAO,CAAC2B;YAAjC;cAAA;cAAA;cAAA;YAAA,QAHH,EAKI3B,OAAO,CAAC4B,MAAR,gBAAiB;cAAG,SAAS,EAAC,eAAb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAjB,GAA2D,IAL/D,EAMKhF,KAAK,CAACiF,SAAN,IAAmBjF,KAAK,CAACwB,IAAN,CAAWC,EAAX,KAAkB2B,OAAO,CAACvB,MAA9C,GAAwD4B,QAAQ,CAACL,OAAD,CAAhE,GAA4E,IANhF;UAAA;YAAA;YAAA;YAAA;UAAA,QADH,eASG;YAAK,SAAS,EAAC,iBAAf;YAAA,UACI8B,qBAAqB,CAACtD;UAD1B;YAAA;YAAA;YAAA;UAAA,QATH;QAAA;UAAA;UAAA;UAAA;QAAA;MADH,GAASkD,KAAT;QAAA;QAAA;QAAA;MAAA,QADF,CADJ,eAkBI;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH,eAsBG;MAAK,GAAG,EAAER,GAAV;MAAA,UACKtE,KAAK,CAACiF,SAAN,GAAkB3B,WAAW,EAA7B,GAAkCjB,WAAW;IADlD;MAAA;MAAA;MAAA;IAAA,QAtBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AA4BF,CAvND;;GAAMtC,M;;KAAAA,M;AAyNN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}