{"ast":null,"code":"function StringToColor(string) {\n  let hash = 0;\n  let i;\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n\n  return color;\n}\n\n_c = StringToColor;\n;\nexport default StringToColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"StringToColor\");","map":{"version":3,"names":["StringToColor","string","hash","i","length","charCodeAt","color","value","toString","slice"],"sources":["/Users/mizutanikoyu/Downloads/hackathon/web/src/components/StringToColor.tsx"],"sourcesContent":["function StringToColor(string: string) {\n   let hash = 0;\n   let i;\n\n   for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n   }\n  \n   let color = '#';\n  \n   for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n   }\n   return color;\n};\n\nexport default StringToColor;\n"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,MAAvB,EAAuC;EACpC,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,CAAJ;;EAEA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,MAAM,CAACG,MAAvB,EAA+BD,CAAC,IAAI,CAApC,EAAuC;IACpCD,IAAI,GAAGD,MAAM,CAACI,UAAP,CAAkBF,CAAlB,KAAwB,CAACD,IAAI,IAAI,CAAT,IAAcA,IAAtC,CAAP;EACF;;EAED,IAAII,KAAK,GAAG,GAAZ;;EAEA,KAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;IACxB,MAAMI,KAAK,GAAIL,IAAI,IAAKC,CAAC,GAAG,CAAd,GAAoB,IAAlC;IACAG,KAAK,IAAK,KAAIC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAmB,EAAxB,CAA0BC,KAA1B,CAAgC,CAAC,CAAjC,CAAT;EACF;;EACD,OAAOH,KAAP;AACF;;KAfQN,a;AAeR;AAED,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}