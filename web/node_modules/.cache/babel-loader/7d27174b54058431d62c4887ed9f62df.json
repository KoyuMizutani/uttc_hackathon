{"ast":null,"code":"var _jsxFileName = \"/Users/iszkrit/UTTC/hackathon/web/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { AvatarIcon } from './index';\nimport niceStamp from \"../assets/images/niceStamp.jpg\";\nimport axios from 'axios';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport DoneIcon from '@mui/icons-material/Done';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Thread = props => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"#\");\n  const [selectedMessageId, setSelectedMessageId] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const [likes, setLikes] = useState([]);\n\n  function classifyByChannel() {\n    axios.get('http://localhost:8080/message').then(res => {\n      setMessages(res.data.filter(message => {\n        return message.channel === props.nowChannel;\n      }));\n    });\n  }\n\n  ;\n\n  function classifyByBookmark() {\n    axios.options('http://localhost:8080/message', {\n      params: {\n        accountId: props.user.id\n      }\n    }).then(res => {\n      setMessages(res.data);\n    });\n  }\n\n  ;\n\n  function classifyBySearch() {\n    axios.get('http://localhost:8080/message').then(res => {\n      setMessages(res.data.filter(message => {\n        return message.content.indexOf(keyword) > -1;\n      }));\n    });\n  }\n\n  const messageRefresh = () => {\n    switch (props.nowChannel) {\n      case \"bookmark\":\n        classifyByBookmark();\n        break;\n\n      case \"search\":\n        classifyBySearch();\n        break;\n\n      default:\n        classifyByChannel();\n    }\n  };\n\n  const fetchAccount = () => {\n    axios.get('http://localhost:8080/account').then(res => {\n      setAccounts(res.data);\n    });\n  };\n\n  const likeRefresh = () => {\n    axios.get('http://localhost:8080/like', {\n      params: {\n        accountId: props.user.id\n      }\n    }).then(res => {\n      setLikes(res.data);\n    });\n  };\n\n  useEffect(() => {\n    messageRefresh();\n    fetchAccount();\n    likeRefresh();\n  }, []);\n  useEffect(() => {\n    messageRefresh();\n  }, [props.nowChannel]);\n  useEffect(() => {\n    fetchAccount();\n  }, [props.user]);\n  useEffect(() => {\n    if (props.nowChannel === \"search\") {\n      classifyBySearch();\n    }\n  }, [keyword]); // --------------------------------------------メッセージ送信系--------------------------------------------\n\n  const sendHandle = e => {\n    if (text !== \"\") {\n      const data = {\n        content: text,\n        sender: props.user.id,\n        channel: props.nowChannel\n      };\n      axios.post('http://localhost:8080/message', data).then(response => {\n        console.log('response body:', response.data);\n        messageRefresh();\n      });\n      setText(\"\");\n      scrollToBottomOfList();\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n    }\n\n    ;\n  };\n\n  console.log(\"a\");\n\n  const sendMessageBar = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: 80,\n            textAlign: 'center'\n          },\n          elevation: 15,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: sendHandle,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                mt: 1.6,\n                width: 650\n              },\n              label: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B\",\n              value: text,\n              onChange: event => {\n                setText(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mt: -3,\n                ml: 1.5\n              },\n              type: \"submit\",\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 94\n              }, this),\n              children: \"\\u9001\\u4FE1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: niceStamp,\n              className: \"nice\",\n              onClick: sendNiceStamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }, this);\n  }; // --------------------------------------------メッセージ編集系--------------------------------------------\n\n\n  const editHandle = (message, messageId) => {\n    setText(message);\n    setSelectedMessageId(messageId);\n  };\n\n  const editMessageBar = () => {\n    const changeHandle = e => {\n      const data = {\n        content: text,\n        id: selectedMessageId\n      };\n      axios.put('http://localhost:8080/message', data).then(response => {\n        console.log('response body:', response.data);\n        setText(\"\");\n        setSelectedMessageId(\"\");\n        messageRefresh();\n      });\n      e.preventDefault();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: 80,\n            textAlign: 'center'\n          },\n          elevation: 10,\n          children: selectedMessageId === \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: changeHandle,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                mt: 1.6,\n                width: 650\n              },\n              label: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u7DE8\\u96C6\",\n              value: text,\n              onChange: event => {\n                setText(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mt: 2.6,\n                ml: 1\n              },\n              type: \"submit\",\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 99\n              }, this),\n              children: \"\\u4FEE\\u6B63 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 10\n    }, this);\n  };\n\n  const editMenu = message => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageMenu\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Chip, {\n          label: \"\\u7DE8\\u96C6\",\n          onClick: () => editHandle(message.content, message.id),\n          onDelete: () => editHandle(message.content, message.id),\n          deleteIcon: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 31\n          }, this),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"\\u524A\\u9664\",\n          onClick: () => deleteHandle(message.id),\n          onDelete: () => deleteHandle(message.id),\n          deleteIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 31\n          }, this),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 10\n    }, this);\n  };\n\n  const deleteHandle = messageId => {\n    const deleteId = {\n      id: messageId\n    };\n    axios.delete('http://localhost:8080/message', {\n      data: deleteId\n    }).then(response => {\n      console.log('response body:', response.data);\n      messageRefresh();\n    });\n  }; // --------------------------------------------スレッドで扱うメソッド--------------------------------------------\n\n\n  function returnSenderInfo(senderId) {\n    const senderInfo = accounts.find(function (account) {\n      return account.id === senderId;\n    });\n    return senderInfo ? {\n      senderName: senderInfo.name,\n      senderColor: senderInfo.color\n    } : {\n      senderName: \"unknown\",\n      senderColor: \"\"\n    };\n  }\n\n  ;\n\n  function returnLikeId(messageId) {\n    var _likes$find$likeId, _likes$find;\n\n    return (_likes$find$likeId = likes === null || likes === void 0 ? void 0 : (_likes$find = likes.find(like => like.messageId === messageId)) === null || _likes$find === void 0 ? void 0 : _likes$find.likeId) !== null && _likes$find$likeId !== void 0 ? _likes$find$likeId : \"\";\n  }\n\n  ;\n\n  const LikeButton = (accountId, messageId, likeId) => {\n    function pushLike(accountId, messageId) {\n      const data = {\n        messageId: messageId,\n        accountId: accountId\n      };\n      axios.post('http://localhost:8080/like', data).then(response => {\n        likeRefresh();\n      });\n    }\n\n    function undoLike(likeId) {\n      const data = {\n        id: likeId\n      };\n      axios.delete('http://localhost:8080/like', {\n        data: data\n      }).then(response => {\n        likeRefresh();\n      });\n    }\n\n    return likeId !== \"\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => {\n        undoLike(likeId);\n      },\n      children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n        sx: {\n          mt: 1.2,\n          ml: 0.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => {\n        pushLike(accountId, messageId);\n      },\n      children: /*#__PURE__*/_jsxDEV(ThumbUpOffAltIcon, {\n        sx: {\n          mt: 1.2,\n          ml: 0.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 162\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 112\n    }, this);\n  };\n\n  const ref = /*#__PURE__*/React.createRef();\n  const scrollToBottomOfList = useCallback(() => {\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  }, [ref]);\n\n  const messageOrStamp = content => {\n    return content === \"niceStamp\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: niceStamp,\n      width: \"100\",\n      height: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 91\n    }, this);\n  };\n\n  function sendNiceStamp() {\n    const data = {\n      content: \"niceStamp\",\n      sender: props.user.id,\n      channel: props.nowChannel\n    };\n    axios.post('http://localhost:8080/message', data).then(response => {\n      console.log('response body:', response.data);\n      messageRefresh();\n    });\n    setText(\"\");\n    scrollToBottomOfList();\n  }\n\n  ;\n\n  function displayTextform() {\n    switch (props.nowChannel) {\n      case \"bookmark\":\n        return;\n\n      case \"search\":\n        return searchBar();\n\n      default:\n        return props.isEditing ? editMessageBar() : sendMessageBar();\n    }\n  }\n\n  const searchBar = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            position: 'fixed',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: 80,\n            textAlign: 'center'\n          },\n          elevation: 15,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                mt: 1.6,\n                width: 650\n              },\n              label: \"\\u30EF\\u30FC\\u30C9\\u304C\\u542B\\u307E\\u308C\\u308B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u691C\\u7D22\",\n              value: keyword,\n              onChange: event => {\n                setKeyword(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 10\n    }, this);\n  }; // --------------------------------------------スレッド本体-------------------------------------------- \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"channel\",\n      children: \"\\u30B9\\u30EC\\u30C3\\u30C9\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: scrollToBottomOfList,\n      children: \"\\u6700\\u65B0\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3078\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread\",\n      children: [messages === null || messages === void 0 ? void 0 : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageInfo\",\n            children: [/*#__PURE__*/_jsxDEV(AvatarIcon, {\n              accountName: returnSenderInfo(message.sender).senderName,\n              accountColor: returnSenderInfo(message.sender).senderColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"senderName\",\n              children: returnSenderInfo(message.sender).senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"sendDate\",\n              children: message.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 25\n            }, this), message.edited ? /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"alreadyEdited\",\n              children: \"(\\u7DE8\\u96C6\\u6E08\\u307F)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 43\n            }, this) : null, LikeButton(props.user.id, message.id, returnLikeId(message.id)), props.isEditing && props.user.id === message.sender ? editMenu(message) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageContents\",\n            children: messageOrStamp(message.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 19\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 16\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      children: displayTextform()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Thread, \"j38zjZu2YZ+t3SD8RplfjLnFzwg=\");\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AvatarIcon","niceStamp","axios","Chip","Stack","Box","Button","TextField","Paper","DoneIcon","DeleteIcon","SendIcon","ThumbUpAltIcon","ThumbUpOffAltIcon","Thread","props","messages","setMessages","text","setText","keyword","setKeyword","selectedMessageId","setSelectedMessageId","accounts","setAccounts","likes","setLikes","classifyByChannel","get","then","res","data","filter","message","channel","nowChannel","classifyByBookmark","options","params","accountId","user","id","classifyBySearch","content","indexOf","messageRefresh","fetchAccount","likeRefresh","sendHandle","e","sender","post","response","console","log","scrollToBottomOfList","preventDefault","sendMessageBar","display","position","bottom","left","right","height","textAlign","mt","width","event","target","value","ml","sendNiceStamp","editHandle","messageId","editMessageBar","changeHandle","put","editMenu","deleteHandle","deleteId","delete","returnSenderInfo","senderId","senderInfo","find","account","senderName","name","senderColor","color","returnLikeId","like","likeId","LikeButton","pushLike","undoLike","ref","createRef","current","scrollIntoView","behavior","block","messageOrStamp","displayTextform","searchBar","isEditing","map","index","date","edited"],"sources":["/Users/iszkrit/UTTC/hackathon/web/src/components/Thread.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { AvatarIcon } from './index';\nimport niceStamp from \"../assets/images/niceStamp.jpg\";\n\nimport axios from 'axios';\n\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport DoneIcon from '@mui/icons-material/Done';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\n\ntype User = {\n   name:    string\n   id:      string \n   color:   string\n};\n\ntype Props = {\n   user:         User\n   nowChannel:   string\n   isEditing:    boolean\n};\n\ntype Message = {\n   content:   string\n   id:        string\n   sender:    string\n   channel:   string\n   date:      string\n   edited:    boolean\n};\n\ntype Like = {\n   likeId:    string\n   messageId: string\n   accountId: string\n}\n\nconst Thread = (props: Props) => {\n\n   const [messages, setMessages] = useState<Message[]>([]);\n   const [text, setText] = useState(\"\");\n   const [keyword, setKeyword] = useState(\"#\");\n   const [selectedMessageId, setSelectedMessageId] = useState(\"\");\n   const [accounts, setAccounts] = useState<User[]>([]);\n   const [likes, setLikes] = useState<Like[]>([]);\n\n   function classifyByChannel() {\n      axios.get('http://localhost:8080/message')\n      .then(res => {\n         setMessages(res.data.filter((message :Message) => {\n            return message.channel===props.nowChannel\n         }))\n      })\n   };\n\n   function classifyByBookmark() {\n      axios.options('http://localhost:8080/message', {\n         params: {\n            accountId: props.user.id\n         }\n      })\n      .then(res => {\n         setMessages(res.data)\n      })\n   };\n\n   function classifyBySearch() {\n      axios.get('http://localhost:8080/message')\n      .then(res => {\n         setMessages(res.data.filter((message :Message) => {\n            return message.content.indexOf(keyword)>-1\n         }))\n      }); \n   }\n\n   const messageRefresh = () => {\n      switch (props.nowChannel) {\n         case \"bookmark\":\n            classifyByBookmark() \n            break;\n         case \"search\":\n            classifyBySearch()\n            break;    \n         default:\n            classifyByChannel()\n      } \n   };\n\n   const fetchAccount = () => {\n      axios.get('http://localhost:8080/account')\n      .then(res => {\n         setAccounts(res.data)\n      })\n   };\n\n   const likeRefresh = () => {\n      axios.get('http://localhost:8080/like', {\n         params: {\n            accountId: props.user.id\n         }\n      })\n      .then(res => {\n         setLikes(res.data)\n      })\n   };\n\n   useEffect(() => {\n      messageRefresh() \n      fetchAccount()\n      likeRefresh()\n   }, []);\n\n   useEffect(() => {\n      messageRefresh() \n   }, [props.nowChannel]);\n\n   useEffect(() => {\n      fetchAccount()\n   }, [props.user]);\n\n   useEffect(() => {\n      if (props.nowChannel===\"search\") {\n         classifyBySearch()\n      }\n   }, [keyword]);\n\n   // --------------------------------------------メッセージ送信系--------------------------------------------\n   const sendHandle = (e: React.FormEvent<HTMLFormElement>) => {\n      if (text !== \"\") {\n         const data = {\n            content:  text,\n            sender:   props.user.id,\n            channel:  props.nowChannel\n         };\n         axios.post('http://localhost:8080/message', data)\n         .then(response => {\n            console.log('response body:', response.data);\n            messageRefresh()\n         });\n         setText(\"\")\n         scrollToBottomOfList()\n         e.preventDefault()       \n      } else {\n         e.preventDefault()\n      };\n   };\n   console.log(\"a\")\n   const sendMessageBar = () => {\n      return (\n         <div className=\"submit\">   \n            <Box sx={{display: 'flex'}}>\n               <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, height: 80, textAlign: 'center'}} elevation={15}>\n                  <form onSubmit={sendHandle}>\n                     <TextField sx={{ mt:1.6, width:650 }} label=\"メッセージを入力\" value={text} onChange={(event)=>{setText(event.target.value)}} />\n                     <Button sx={{mt:-3, ml:1.5}} type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>\n                        送信\n                     </Button>\n                     <img src={niceStamp} className=\"nice\" onClick={sendNiceStamp}/>\n                  </form>\n               </Paper>\n            </Box>\n         </div>\n      );\n   };\n\n\n\n  // --------------------------------------------メッセージ編集系--------------------------------------------\n   const editHandle = (message: string, messageId: string) => {\n      setText(message)\n      setSelectedMessageId(messageId)\n   };\n\n   const editMessageBar = () => {\n    \n      const changeHandle = (e :React.FormEvent<HTMLFormElement>) => {\n         const data = {\n            content:   text,\n            id:        selectedMessageId,\n         };\n         axios.put('http://localhost:8080/message', data)\n         .then(response => {\n            console.log('response body:', response.data);\n            setText(\"\")\n            setSelectedMessageId(\"\")\n            messageRefresh() \n         });\n         e.preventDefault()\n      };\n    \n      return (\n         <div className=\"submit\">   \n            <Box sx={{display: 'flex'}}>\n               <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, height: 80, textAlign: 'center'}} elevation={10}>\n                  \n                     {(selectedMessageId === \"\") ?\n                     <></>\n                     :\n                     (\n                        <form onSubmit={changeHandle}>\n                           <TextField sx={{ mt:1.6, width:650 }} label=\"メッセージを編集\" value={text} onChange={(event)=>{setText(event.target.value)}} />\n                           <Button sx={{mt:2.6, ml:1}} type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>修正 </Button> \n                        </form>\n                     )}\n               </Paper>\n            </Box>\n         </div>\n      );\n   };\n\n   const editMenu = (message: Message) => {\n      return (\n         <div className=\"messageMenu\">\n            <Stack direction=\"row\" spacing={1}>\n               <Chip\n                  label=\"編集\"\n                  onClick={()=>editHandle(message.content, message.id)}\n                  onDelete={()=>editHandle(message.content, message.id)}\n                  deleteIcon={<DoneIcon />}\n                  size=\"small\"\n               />\n               <Chip\n                  label=\"削除\"\n                  onClick={()=>deleteHandle(message.id)}\n                  onDelete={()=>deleteHandle(message.id)}\n                  deleteIcon={<DeleteIcon />}\n                  size=\"small\"\n               />\n            </Stack>\n         </div>\n      );\n   };\n\n   const deleteHandle = (messageId: string) => {\n      const deleteId = {\n         id: messageId   \n      };\n      axios.delete('http://localhost:8080/message', {data: deleteId})\n      .then(response => {\n         console.log('response body:', response.data);\n         messageRefresh();\n      });\n    };\n\n   // --------------------------------------------スレッドで扱うメソッド--------------------------------------------\n   type SenderInfo = {\n      senderName:    string\n      senderColor:   string\n   };\n\n   function returnSenderInfo(senderId: string) :SenderInfo {\n      const senderInfo = accounts.find(function(account) {return account.id === senderId});\n      return senderInfo ? {senderName: senderInfo.name, senderColor: senderInfo.color} : {senderName: \"unknown\", senderColor : \"\"};\n   };\n\n   function returnLikeId (messageId: string) :string {\n      return likes?.find((like) => like.messageId === messageId)?.likeId ?? \"\";\n   };\n\n   const LikeButton = (accountId: string, messageId: string, likeId: string) => {\n      function pushLike(accountId: string, messageId: string) {\n         const data = {\n            messageId: messageId,\n            accountId: accountId   \n         };\n         axios.post('http://localhost:8080/like', data)\n         .then(response => {\n            likeRefresh()\n         });\n      }\n      function undoLike(likeId: string) {\n         const data = {\n            id: likeId\n         };\n         axios.delete('http://localhost:8080/like', {data: data})\n         .then(response => {\n            likeRefresh()\n         });\n      }\n      return likeId !== \"\" ? <a onClick={()=>{undoLike(likeId)}}><ThumbUpAltIcon sx={{mt:1.2, ml:0.7}}/></a> : <a onClick={()=>{pushLike(accountId, messageId)}}><ThumbUpOffAltIcon sx={{mt:1.2, ml:0.7}}/></a>\n   };\n\n   const ref = React.createRef<HTMLDivElement>()\n   const scrollToBottomOfList = useCallback(() => {\n      ref!.current!.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n      })\n    }, [ ref ])\n\n    const messageOrStamp =(content: string) => {\n       return content === \"niceStamp\" ? <img src={niceStamp} width=\"100\" height=\"100\"/> : <a>{content}</a> \n    };\n\n    function sendNiceStamp() {\n      const data = {\n         content:  \"niceStamp\",\n         sender:   props.user.id,\n         channel:  props.nowChannel\n      };\n      axios.post('http://localhost:8080/message', data)\n      .then(response => {\n         console.log('response body:', response.data);\n         messageRefresh()\n      });\n      setText(\"\")\n      scrollToBottomOfList()\n    };\n    \n    function displayTextform() {\n      switch (props.nowChannel) {\n         case \"bookmark\":\n            return \n         case \"search\":\n            return searchBar()\n         default:\n            return props.isEditing ? editMessageBar() : sendMessageBar()\n      }\n    }\n\n   const searchBar = () => {\n      return (\n         <div className=\"submit\">   \n            <Box sx={{display: 'flex'}}>\n               <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, height: 80, textAlign: 'center'}} elevation={15}>\n                  <form>\n                     <TextField sx={{ mt:1.6, width:650 }} label=\"ワードが含まれるメッセージを検索\" value={keyword} onChange={(event)=>{setKeyword(event.target.value)}} />\n                  </form>\n               </Paper>\n            </Box>\n         </div>\n      );\n   };\n  // --------------------------------------------スレッド本体-------------------------------------------- \n   return(\n      <div>\n         <h2 className=\"channel\">スレッド一覧</h2>\n         <Button onClick={scrollToBottomOfList}>最新のメッセージへ</Button>\n         <div className=\"thread\">\n            {messages?.map((message: Message, index: number) => (\n               <li key={index}>\n                  <div>\n                     <div className=\"messageInfo\">\n                        <AvatarIcon accountName={returnSenderInfo(message.sender).senderName} accountColor={returnSenderInfo(message.sender).senderColor}/>\n                        <a className=\"senderName\">{returnSenderInfo(message.sender).senderName}</a>\n                        <a className=\"sendDate\">{message.date}</a>\n                        {message.edited ? <a className=\"alreadyEdited\">(編集済み)</a> : null}\n                        {LikeButton(props.user.id, message.id, returnLikeId(message.id))}\n                        {(props.isEditing && props.user.id === message.sender) ? editMenu(message) : null}\n                     </div>\n                     <div className=\"messageContents\">\n                        {messageOrStamp(message.content)}\n                     </div>\n                  </div>\n               </li>\n             ))}\n             <br />\n         </div>\n         <div ref={ref}>\n            {displayTextform()}\n         </div>\n      </div>\n   );\n};\n  \nexport default Thread;"],"mappings":"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"},"metadata":{},"sourceType":"module"}