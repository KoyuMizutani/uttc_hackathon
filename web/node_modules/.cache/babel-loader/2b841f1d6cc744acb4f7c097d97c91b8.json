{"ast":null,"code":"var _jsxFileName = \"/Users/iszkrit/UTTC/hackathon/web/src/components/UserSelect.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { StringToColor, AvatarIcon } from './index';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addAccountHandle() {\n  function submitHandle(event) {\n    if (newAccountName !== \"\") {\n      const newAccountColor = StringToColor(newAccountName);\n      const data = {\n        Name: newAccountName,\n        Color: newAccountColor\n      };\n      axios.post('http://localhost:8080/account', data);\n      setNewAccountName(\"\");\n    } else {\n      event.preventDefault();\n    }\n\n    ;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"accountEnter\",\n        value: newAccountName,\n        placeholder: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u8FFD\\u52A0\",\n        onChange: event => {\n          setNewAccountName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"post\",\n        type: \"submit\",\n        value: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n;\n\nfunction SimpleDialog(props) {\n  _s();\n\n  const [accounts, setAccounts] = useState([]);\n  const [newAccountName, setNewAccountName] = useState(\"\");\n  useEffect(() => {\n    axios.get('http://localhost:8080/account').then(res => {\n      setAccounts(res.data);\n    });\n  }, [accounts]);\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        pt: 0\n      },\n      children: [accounts.map(account => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleListItemClick(account.name),\n        children: [/*#__PURE__*/_jsxDEV(AvatarIcon, {\n          accountName: account.name,\n          accountColor: account.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: () => handleListItemClick('addAccount'),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u8FFD\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleDialog, \"ciaooXKhRrlhu6Cf2OxEVcRKowI=\");\n\n_c = SimpleDialog;\n\nconst UserSelect = props => {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [\"Selected: \", selectedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open simple dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UserSelect, \"Do4OkZlv0qopuj/OyvdbwyP1nrE=\");\n\n_c2 = UserSelect;\nexport default UserSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"UserSelect\");","map":{"version":3,"names":["React","useState","useEffect","StringToColor","AvatarIcon","axios","Button","Avatar","List","ListItem","ListItemText","ListItemAvatar","DialogTitle","Dialog","AddIcon","Typography","addAccountHandle","submitHandle","event","newAccountName","newAccountColor","data","Name","Color","post","setNewAccountName","preventDefault","target","value","SimpleDialog","props","accounts","setAccounts","get","then","res","onClose","selectedValue","open","handleClose","handleListItemClick","pt","map","account","name","color","id","UserSelect","setOpen","setSelectedValue","emails","handleClickOpen"],"sources":["/Users/iszkrit/UTTC/hackathon/web/src/components/UserSelect.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StringToColor, AvatarIcon } from './index';\n\nimport axios from 'axios';\n\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { blue } from '@mui/material/colors';\nimport { AccountBalance } from '@mui/icons-material';\n\n\n   function addAccountHandle() {\n\n      function submitHandle(event: React.FormEvent<HTMLFormElement>) {\n         if (newAccountName !== \"\") {\n            const newAccountColor = StringToColor(newAccountName)\n            const data = {\n              Name:    newAccountName, \n              Color:   newAccountColor\n            };\n            axios.post('http://localhost:8080/account', data)\n            setNewAccountName(\"\")\n         } else {\n            event.preventDefault()\n         };\n      };\n\n      return(\n         <form onSubmit={submitHandle}>\n            <div>\n               <input \n                  className=\"accountEnter\"\n                  value={newAccountName}\n                  placeholder=\"アカウントを追加\"\n                  onChange={(event)=>{setNewAccountName(event.target.value)}}\n               />\n            </div>\n            <div>\n               <input\n                  className=\"post\"\n                  type=\"submit\"\n                  value=\"追加\"\n               /> \n            </div>\n         </form>\n      );\n   };\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  selectedValue: string;\n  onClose: (value: string) => void;\n}\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n\n   const [accounts, setAccounts] = useState<User[]>([]);\n   const [newAccountName, setNewAccountName] = useState(\"\");\n\n   useEffect(() => {\n      axios.get('http://localhost:8080/account')\n      .then(res => {\n         setAccounts(res.data)\n      })\n   }, [accounts]);\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value: string) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>アカウントを選択してください</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {accounts.map((account) => (\n          <ListItem button onClick={() => handleListItemClick(account.name)} key={account.id}>\n            <AvatarIcon accountName={account.name} accountColor={account.color} /> \n            <ListItemText primary={account} />\n          </ListItem>\n        ))}\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"アカウントを追加\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\ntype User = {\n   name: string\n   id: string \n   color: string\n};\n\ntype Props = {\n   setUser: React.Dispatch<React.SetStateAction<User>>\n};\n\nconst UserSelect = (props: Props) => {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value: string) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n};\n\nexport default UserSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}